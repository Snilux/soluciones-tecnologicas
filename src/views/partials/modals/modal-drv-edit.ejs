<div id="cameraModalDrv" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-gray-800 border border-gray-700 rounded-lg p-6 w-full max-w-md mx-4">
        <div class="flex justify-between items-center mb-4">
            <h2 id="modalTitleDrv" class="text-xl font-bold text-white"></h2>
            <button onclick="closeModalDvr()" class="text-gray-400 hover:text-white">
                <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
                    </path>
                </svg>
            </button>
        </div>

        <form id="cameraForm" class="space-y-4">
            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">MP</label>
                <input type="text" id="mpEdit" required
                    class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Ej: 2 MP, 5 MP, 8 MP">
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Canales</label>
                <input type="number" id="canalesEdit" step="0.01" required
                    class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="0.00">

            </div>
            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Precio</label>
                <input type="number" id="precioEdit" step="0.01" required
                    class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="0.00">
            </div>

            <input type="hidden" id="id">

            <div class="flex gap-3 pt-4">
                <button type="button" onclick="closeModalDvr()"
                    class="flex-1 px-4 py-2 border border-gray-600 text-gray-300 rounded-lg hover:bg-gray-700 transition-colors">
                    Cancelar
                </button>
                <button type="submit" id="btnEditDrv"
                    class="flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">
                    Guardar
                </button>
            </div>
        </form>
    </div>
</div>

<script>

    function openEditModalDrv(buttonElement) {
        // Access data attributes using dataset
        const id = buttonElement.dataset.id;
        const mp = buttonElement.dataset.mp;
        const canales = buttonElement.dataset.canales;
        const precio = buttonElement.dataset.precio;

        document.getElementById(
            "modalTitleDrv"
        ).textContent = `Editar drv con id: ${id} de ${mp}MP`;

        document.getElementById("btnEditDrv").textContent = "Guardar Cambios";

        document.getElementById("mpEdit").value = mp;
        document.getElementById("canalesEdit").value = canales;
        document.getElementById("precioEdit").value = precio;
        document.getElementById("id").value = id;

        document.getElementById("cameraModalDrv").classList.remove("hidden");
        document.getElementById("cameraModalDrv").classList.add("flex");
    }

    function closeModalDvr() {
        document.getElementById("cameraModalDrv").classList.add("hidden");
        document.getElementById("cameraModalDrv").classList.remove("flex");
        editingCameraId = null;
    }

    document.getElementById("cameraModalDrv").addEventListener("click", function (e) {
        if (e.target === this) {
            closeModal();
        }
    });

    document.getElementById('btnEditDrv').addEventListener('click', async (e) => {
        e.preventDefault()
        const id = document.getElementById('id').value
        const mp = parseFloat(document.getElementById("mpEdit").value.trim());
        const canales = parseFloat(document.getElementById("canalesEdit").value.trim());
        const precio = parseFloat(document.getElementById("precioEdit").value.trim());

        const data = {
            id,
            mp,
            canales,
            precio
        };
        console.log(data);

        try {
            const response = await fetch(`/admin/quoters/cameras/drv/${id}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });

            const result = await response.json();
            button.disabled = true;

            if (response.ok) {
                button.disabled = false;
                Swal.fire("Éxito", result.successMessage, "success").then(() => {
                    setTimeout(() => {
                        Swal.close();
                        window.location.href = "/admin/quoters/cameras";
                    }, 1000);
                });
            } else {
                button.disabled = false;
                let errorMessage = result.errorMessage;

                if (
                    result.errors &&
                    Array.isArray(result.errors) &&
                    result.errors.length > 0
                ) {
                    errorMessage += `\n\n` + result.errors.join("\n");
                }

                Swal.fire("Error", errorMessage, "error");
            }
        } catch (error) {
            button.disabled = false;
            console.error("Error al enviar la solicitud:", error);
            Swal.fire(
                "Error",
                "Error de conexión o inesperado. Inténtalo de nuevo.",
                "error"
            );
        }
    })



</script>