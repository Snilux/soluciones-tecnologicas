<!-- Delete modal for DRV -->
<div id="deleteModalDrv" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-gray-800 border border-gray-700 rounded-lg p-6 w-full max-w-md mx-4">
        <div class="flex items-center gap-3 mb-4">
            <div class="p-2 bg-red-500/20 rounded-lg">
                <svg class="h-6 w-6 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z">
                    </path>
                </svg>
            </div>
            <h2 class="text-xl font-bold text-white">Confirmar Eliminación</h2>
        </div>

        <p class="text-gray-400 mb-6">
            ¿Estás seguro de que deseas eliminar <span id="deleteItemNameDrv" class="text-white font-medium"></span>? 
            Esta acción no se puede deshacer.
        </p>

        <div class="flex gap-3">
            <button onclick="closeDeleteModalDrv()"
                class="flex-1 px-4 py-2 border border-gray-600 text-gray-300 rounded-lg hover:bg-gray-700 transition-colors">
                Cancelar
            </button>
            <button onclick="confirmDeleteDrv()"
                class="flex-1 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors">
                Eliminar
            </button>
        </div>
        <input type="hidden" id="deleteDrvId">
    </div>
</div>


<script>
    function openDeleteModalDrv(buttonElement) {
        const id = buttonElement.dataset.id;

        document.getElementById(
            "deleteItemNameDrv"
        ).textContent = `El drv de id: ${id}`;

        document.getElementById("deleteDrvId").value = id;

        document.getElementById("deleteModalDrv").classList.remove("hidden");
        document.getElementById("deleteModalDrv").classList.add("flex");
    }

    function closeDeleteModalDrv() {
        document.getElementById("deleteModalDrv").classList.add("hidden");
        document.getElementById("deleteModalDrv").classList.remove("flex");
        cameraToDelete = null;
    }

    document.getElementById("deleteModalDrv").addEventListener("click", function (e) {
        if (e.target === this) {
            closeDeleteModal();
        }
    });

    // Close modals with Escape key
    document.addEventListener("keydown", function (e) {
        if (e.key === "Escape") {
            closeModal();
            closeDeleteModalDrv();
        }
    });

    function confirmDeleteDrv() {
        const id = document.getElementById("deleteDrvId").value;

        fetch(`/admin/quoters/cameras/drv/${id}`, {
            method: "DELETE",
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.successMessage) {
                    Swal.fire("Éxito", data.successMessage, "success").then(() => {
                        setTimeout(() => {
                            Swal.close();
                            window.location.href = "/admin/quoters/cameras";
                        }, 1000);
                    });
                } else {
                    Swal.fire("Error", data.errorMessage, "error");
                }
            })
            .catch((error) => {
                console.error("Error al eliminar el parámetro:", error);
                Swal.fire("Error", "Ocurrió un error al eliminar el parámetro.", "error");
            });

        closeDeleteModalDrv();
    }

</script>