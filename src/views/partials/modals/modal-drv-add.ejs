<!-- ===== Modal DRV ===== -->
<div id="modalAddDrv"
    class="modalDrv opacity-0 pointer-events-none fixed w-full h-full top-0 left-0 flex items-center justify-center">
    <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>

    <div class="modal-container bg-gray-800 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto">

        <div
            class="modal-close-drv absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50">
            <svg class="fill-current text-white" xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                viewBox="0 0 18 18">
                <path
                    d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z">
                </path>
            </svg>
            <span class="text-sm">(ESC)</span>
        </div>

        <!-- Add margin if you want to see some of the overlay behind the modal-->
        <div class="modal-content py-4 text-left px-6">

            <!--Title-->
            <div class="flex justify-between items-center pb-1">
                <h3 id="parametroDrv" class="text-lg font-semibold text-white mb-1 truncate"></h3>
                <div class="modal-close-drv cursor-pointer z-50">
                    <svg class="fill-current text-white" xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                        viewBox="0 0 18 18">
                        <path
                            d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z">
                        </path>
                    </svg>
                </div>
            </div>

            <!--Body-->
            <div class="my-5">
                <label for="mpAddDrv" class="block text-gray-300 text-sm font-bold mb-2">MP:</label>
                <input type="number" id="mpAddDrv" min="0" required
                    class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 text-white border-gray-600"
                    placeholder="Ej: 2 MP, 5 MP, 8 MP">

                <label for="canalesAddDrv" class="block text-gray-300 text-sm font-bold mt-2 mb-2">Número de
                    canales:</label>
                <input type="number" id="canalesAddDrv" min="0" required
                    class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 text-white border-gray-600"
                    placeholder="Ej: 2, 4, 6">

                <label for="precioAddDrv" class="block text-gray-300 text-sm font-bold mt-4 mb-2">Precio:</label>
                <input type="number" id="precioAddDrv" min="0" required
                    class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 text-white border-gray-600"
                    placeholder="0.00">
            </div>

            <!--Footer-->
            <div class="flex justify-end pt-2">
                <button
                    class="modal-close-drv px-4 bg-gray-600 p-3 rounded-lg text-white hover:bg-gray-400">Cancelar</button>
                <button id="addDrvBtn" type="submit"
                    class="px-4 bg-blue-600 p-3 ml-3 rounded-lg text-white hover:bg-blue-400">Guardar
                </button>
            </div>

        </div>
    </div>
</div>

<script>
    // Referencias principales (clases sin cambios)
    const modalAddDrv = document.querySelector(".modalDrv");
    const modalCloseDrv = document.querySelectorAll(".modal-close-drv");

    // Abrir modal
    function openAddModalDrv(buttonElement) {
        modalAddDrv.classList.remove("opacity-0", "pointer-events-none");
        document.getElementById("parametroDrv").textContent = "Agregar valor de DRV";
    }

    // Cerrar modal (por cada elemento con la clase .modal-close)
    modalCloseDrv.forEach((close) => {
        close.addEventListener("click", () => {
            modalAddDrv.classList.add("opacity-0", "pointer-events-none");
        });
    });

    // Botón Guardar
    const buttonDrv = document.getElementById("addDrvBtn");

    buttonDrv.addEventListener("click", async (e) => {
        e.preventDefault();

        const mp = parseFloat(document.getElementById("mpAddDrv").value.trim());
        const canales = parseFloat(document.getElementById("canalesAddDrv").value.trim());
        const precio = parseFloat(document.getElementById("precioAddDrv").value.trim());

        const data = { mp, canales, precio };
        console.log(data);

        try {
            const response = await fetch(`/admin/quoters/cameras/drv`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });

            const result = await response.json();
            buttonDrv.disabled = true;

            if (response.ok) {
                buttonDrv.disabled = false;
                Swal.fire("Éxito", result.successMessage, "success").then(() => {
                    setTimeout(() => {
                        Swal.close();
                        window.location.href = "/admin/quoters/cameras";
                    }, 1000);
                });
            } else {
                buttonDrv.disabled = false;
                let errorMessage = result.errorMessage;

                if (result.errors?.length) {
                    errorMessage += `\n\n` + result.errors.join("\n");
                }

                Swal.fire("Error", errorMessage, "error");
            }
        } catch (error) {
            buttonDrv.disabled = false;
            console.error("Error al enviar la solicitud:", error);
            Swal.fire("Error", "Error de conexión o inesperado. Inténtalo de nuevo.", "error");
        }
    });
</script>